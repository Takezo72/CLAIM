@using System.Globalization
@using IAFG.IA.VI.VIMWPNP2.Helpers
@using IAFG.IA.VI.VIMWPNP2.Ressources.FormTexts
@model IAFG.IA.VI.VIMWPNP2.Models.Shared.InsuredInformation

@{
    var resources = new ResourcesFormTextsHelper((bool)ViewData["IsInsured"], CultureInfo.CurrentCulture);
}

<div class="we_form">
    <div class="caption">
        <h2>
            @string.Format(resources.GetString("Header_AboutInsured").ToString(), ViewData["InsuredFirstName"] ?? string.Empty)

            @if (!(bool)TempData["IsTransmitted"])
            {
                <span style="margin-left: 1em;">@Html.ActionLink(Resources.InsuredClaim.BoutonModifier, "AboutInsured", "AcceleratedBenefit", null, new { @class = "btn" })</span>
            }
        </h2>
        <div class="gridLayout">
            <div class="row">
                <div class="columns small-8">
                    <h3>@UI.Header_DateOfBirth</h3>
                </div>
                <div class="columns small-4">
                    <p>@FormatHelper.FormatDate(Model.BirthDate)</p>
                </div>
            </div>
            <div class="row">
                <div class="columns small-8">
                    <h3>@UI.Header_Address</h3>
                </div>
                <div class="columns small-4">
                    <p>@Html.Raw(Model.Address.ToHtmlString())</p>
                </div>
            </div>

            @if (Model.Address.IsCanada())
            {
                <div class="row">
                    <div class="columns small-8">
                        <h3>@UIAddress.MainPhone</h3>
                    </div>
                    <div class="columns small-4">
                        <p>
                            @(string.IsNullOrWhiteSpace(Model.Address.MainPhoneExtension) ? Model.Address.MainPhoneNumber : string.Format("{0} {1}: {2}",
                                                                                                                                                  Model.Address.MainPhoneNumber,
                                                                                                                                                  UIAddress.PhoneExtension,
                                                                                                                                                  Model.Address.MainPhoneExtension))
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="columns small-8">
                        <h3>@UIAddress.SecondaryPhone</h3>
                    </div>
                    <div class="columns small-4">
                        <p>
                            @(string.IsNullOrWhiteSpace(Model.Address.SecondaryPhoneExtension) ? Model.Address.SecondaryPhoneNumber : string.Format("{0} {1}: {2}",
                                                                                                                                                            Model.Address.SecondaryPhoneNumber,
                                                                                                                                                            UIAddress.PhoneExtension,
                                                                                                                                                            Model.Address.SecondaryPhoneExtension))
                        </p>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="columns small-8">
                        <h3>@UIAddress.MainPhone</h3>
                    </div>
                    <div class="columns small-4">
                        <p>@Model.Address.PhoneNumberOutsideCanada</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

